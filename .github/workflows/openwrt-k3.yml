name: 编译 OpenWrt-k3

on:
  push:
    branches: 
      - master
  release:
      types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 校验本地文件
        uses: actions/checkout@master
        with:
          ref: master

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install wget build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: 下载源码
        env:
          VER: v19.07.2
          URL: https://github.com/openwrt/openwrt/archive/
        run: |
          wget -q ${URL}${VER}.tar.gz
          tar -zxf ${VER}.tar.gz
          rm ${VER}.tar.gz
          mv openwrt-* openwrt

      - name: 自定义扩展文件
        run: |
          cd openwrt

          # luci-app-passwall
          cat >> feeds.conf.default <<EOF
          src-git lienol https://github.com/Lienol/openwrt-package
          EOF
          
          cd package
          mkdir software

          # luci-theme-argon
          git clone https://github.com/jerrykuku/luci-theme-argon software/luci-theme-argon

          # UnblockNeteaseMusicGo (包含后端和前端)
          git clone https://github.com/cnsilvan/luci-app-unblockneteasemusic software/unblock-neteasemusic-go

          # smartdns
          git clone https://github.com/getwin/openwrt-smartdns package/smartdns
          git clone https://github.com/pymumu/luci-app-smartdns package/luci-app-smartdns

          # KMS
          git clone https://github.com/flytosky-f/openwrt-vlmcsd software/vlmcsd
          # git clone https://github.com/flytosky-f/luci-app-vlmcsd software/luci-app-vlmcsd
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vlmcsd software/luci-app-vlmcsd

          # udp2raw-tunnel
          git clone https://github.com/getwin/openwrt-udp2raw software/udp2raw-tunnel
          git clone https://github.com/qq523407234/luci-app-udp2raw software/luci-app-udp2raw
          
          # # OpenAppFilter
          # git clone https://github.com/destan19/OpenAppFilter software/OpenAppFilter
          
          # flowoffload (依赖 pdnsd-alt)
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/shortcut-fe software/shortcut-fe
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-sfe software/luci-app-sfe
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-flowoffload software/luci-app-flowoffload

          # k3-wifi-firmware  
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/k3-brcmfmac4366c-firmware software/k3-brcmfmac4366c-firmware
          pushd software/k3-brcmfmac4366c-firmware/files/lib/firmware/brcm
          wget --no-check-certificate https://github.com/Hill-98/phicommk3-firmware/raw/master/brcmfmac4366c-pcie.bin.69027 -O brcmfmac4366c-pcie.bin
          popd

      - name: 更新扩展环境
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 自定义配置
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config

          # 默认ip 主机名
          sed -i 's/192.168.1.1/192.168.50.1/g' package/base-files/files/bin/config_generate
          sed -i "s/'OpenWrt'/'Route'/g" package/base-files/files/bin/config_generate

          # K3
          cat >> .config <<EOF
          CONFIG_TARGET_bcm53xx=y
          CONFIG_TARGET_bcm53xx_DEVICE_phicomm-k3=y
          CONFIG_TARGET_BOARD="bcm53xx"
          CONFIG_PACKAGE_k3wifi=y
          # CONFIG_PACKAGE_brcmfmac-firmware-4366c0-pcie is not set
          # CONFIG_TARGET_bcm53xx_Generic is not set
          EOF

          # System
          cat >> .config <<EOF
          CONFIG_DEFAULT_wget=y
          CONFIG_PACKAGE_zoneinfo-asia=y
          CONFIG_LUCI_LANG_zh-cn=y
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-firewall-zh-cn=y
          CONFIG_DEFAULT_luci-compat=y
          CONFIG_DEFAULT_luci-lib-ipkg=y
          CONFIG_PACKAGE_kmod-wireguard=y
          CONFIG_PACKAGE_wireguard=y
          CONFIG_PACKAGE_wireguard-tools=y
          CONFIG_PACKAGE_luci-proto-wireguard=y
          CONFIG_PACKAGE_luci-app-wireguard=y
          CONFIG_PACKAGE_luci-i18n-wireguard-zh-cn=y
          CONFIG_PACKAGE_udpxy=y
          CONFIG_PACKAGE_luci-app-udpxy=y
          CONFIG_PACKAGE_luci-i18n-udpxy-zh-cn=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_ipset=y
          EOF

          # 插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-flowoffload=y
          CONFIG_PACKAGE_luci-i18n-flowoffload-zh-cn=y
          CONFIG_PACKAGE_smartdns=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-control-mia=y
          CONFIG_PACKAGE_luci-app-control-timewol=y
          CONFIG_PACKAGE_luci-app-control-webrestriction=y
          CONFIG_PACKAGE_luci-i18n-wol-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-control-mia-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-control-timewol-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-control-webrestriction-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vlmcsd-zh-cn=y
          CONFIG_PACKAGE_luci-app-guest-wifi=y
          CONFIG_PACKAGE_luci-app-luci-app-vlmcsd=y
          CONFIG_PACKAGE_udp2raw-tunnel=y
          CONFIG_PACKAGE_luci-app-udp2raw=y

          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_shadowsocksr-libev-alt=y
          CONFIG_PACKAGE_shadowsocks-libev-config=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          # CONFIG_PACKAGE_shadowsocks-libev-ss-rules is not set
          # CONFIG_PACKAGE_shadowsocks-libev-ss-server is not set
          # CONFIG_PACKAGE_shadowsocks-libev-ss-tunnel is not set
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_pdnsd-alt=y
          CONFIG_PACKAGE_tcping=y

          CONFIG_PACKAGE_v2ray=y
          # CONFIG_V2RAY_COMPRESS_GOPROXY is not set
          # CONFIG_V2RAY_JSON_V2CTL is not set
          CONFIG_V2RAY_JSON_INTERNAL=y
          # CONFIG_V2RAY_JSON_NONE is not set
          CONFIG_V2RAY_EXCLUDE_V2CTL=y
          CONFIG_V2RAY_EXCLUDE_ASSETS=y
          CONFIG_V2RAY_COMPRESS_UPX=y
          CONFIG_V2RAY_DISABLE_NONE=y
          # CONFIG_V2RAY_DISABLE_CUSTOM is not set

          CONFIG_PACKAGE_UnblockNeteaseMusic=y
          CONFIG_PACKAGE_luci-app-unblockneteasemusic=y

          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
          CONFIG_PACKAGE_simple-obfs=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_kcptun is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          EOF

          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          EOF

          # ipv6 dnsmasq_full
          cat >> .config <<EOF
          CONFIG_PACKAGE_ipv6helper=y
          # CONFIG_PACKAGE_dnsmasq is not set
          CONFIG_PACKAGE_dnsmasq-full=y
          CONFIG_PACKAGE_dnsmasq_full_dhcp=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_dnsmasq_full_dnssec is not set
          CONFIG_PACKAGE_dnsmasq_full_auth=y
          CONFIG_PACKAGE_dnsmasq_full_ipset=y
          CONFIG_PACKAGE_dnsmasq_full_conntrack=y
          CONFIG_PACKAGE_dnsmasq_full_noid=y
          # CONFIG_PACKAGE_dnsmasq_full_broken_rtc is not set
          # CONFIG_PACKAGE_dnsmasq_full_tftp is not set
          EOF

          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF

          # 取消编译VMware镜像以及镜像填充:
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF

          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-phy-bcm-ns-usb2=y
          CONFIG_PACKAGE_kmod-phy-bcm-ns-usb3=y
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: 下载编译所需源码
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 进行多线程编译
        run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc)

      - name: 尝试单线程编译
        if: failure()
        run: |
            cd openwrt
            make -j1 V=s
        continue-on-error: true

      - name: 提取文件
        if: always()
        run: |
          rm -rf ./firmware/
          mkdir -p ./firmware/
          find ./openwrt/bin/targets/ -name "*phicomm-k3-*" | xargs -i mv -f {} ./firmware/

      - name : 上传文件
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: OpenWrtFirmware
          path: firmware
